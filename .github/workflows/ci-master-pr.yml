name: ci-master-pr

on:
  push:
    branches:
    - master
    tags:
    - '**'
  pull_request:
    branches:
    - master

jobs:
  test-GITHUB_ENV:
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "VAR1=VALUE1" >> $GITHUB_ENV
    - run: |
        echo "env.VAR1: ${{ env.VAR1 }}"

  test-GITHUB_OUTPUT:
    runs-on: ubuntu-latest
    outputs:
      VAR2: ${{ steps.savestate.outputs.VAR2 }}
    steps:
    - id: savestate
      run: |
        echo "VAR2=VALUE2" >> $GITHUB_OUTPUT
    - run: |
        echo "steps.savestate.outputs.VAR2: ${{ steps.savestate.outputs.VAR2 }}"

  test-needs-GITHUB_OUTPUT:
    needs: [test-GITHUB_OUTPUT]
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "needs.test-GITHUB_OUTPUT.outputs.VAR2: ${{ needs.test-GITHUB_OUTPUT.outputs.VAR2 }}"

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: |
        mkdir -p bin
        echo 123 > bin/mybin
        SHA=$( echo "${GITHUB_SHA}" | cut -c1-7 )
        echo 123-$SHA > bin/mybin
    - name: Tar binaries
      run: |
        tar -cvf binaries.tar bin
    - uses: actions/upload-artifact@v3
      with:
        name: binaries-${{ github.sha }}
        path: |
          binaries.tar

  update-draft-release:
    needs: [build]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
    # Drafts your next Release notes as Pull Requests are merged into "master"
    - id: release-drafter
      uses: release-drafter/release-drafter@v5
      with:
        config-name: release-drafter.yml
        publish: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - run: |
        echo "${{ steps.release-drafter.outputs.body }}"
    # Ensure the same binaries are used from the build job
    - name: Download binaries
      uses: actions/download-artifact@v3
      with:
        name: binaries-${{ github.sha }}
    - name: Untar binaries
      run: |
        tar -xvf binaries.tar
    # Upload binaries to draft
    - uses: softprops/action-gh-release@v1
      with:
        draft: true
        id: ${{ steps.release-drafter.outputs.id }}
        name: ${{ steps.release-drafter.outputs.name }}
        tag_name: ${{ steps.release-drafter.outputs.tag_name }}
        body: ${{ steps.release-drafter.outputs.body }}
        files: |
          bin/*

  release:
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
    # Drafts your next Release notes as Pull Requests are merged into "master"
    - id: release-drafter
      uses: release-drafter/release-drafter@v5
      with:
        config-name: release-drafter.yml
        publish: false
        name: ${{ github.ref_name }}
        tag: ${{ github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    # Ensure the same binaries are used from the build job
    - name: Download binaries
      uses: actions/download-artifact@v3
      with:
        name: binaries-${{ github.sha }}
    - name: Untar binaries
      run: |
        tar -xvf binaries.tar
    # Upload binaries and publish
    - uses: softprops/action-gh-release@v1
      with:
        draft: false
        id: ${{ steps.release-drafter.outputs.id }}
        name: ${{ steps.release-drafter.outputs.name }}
        tag_name: ${{ steps.release-drafter.outputs.tag_name }}
        body: ${{ steps.release-drafter.outputs.body }}
        files: |
          bin/*

  github-ref-and-tag-example:
    runs-on: ubuntu-latest
    steps:
     - name: GitHub Ref and Tag example
       run: |
         echo "Ref from GITHUB_REF: $GITHUB_REF"
         echo "Ref from github.ref: ${{ github.ref }}"
         echo "Tag name from GITHUB_REF_NAME: $GITHUB_REF_NAME"
         echo "Tag name from github.ref_name: ${{ github.ref_name }}"
