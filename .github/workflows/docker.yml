name: docker
on:
  push:
    branches:
      - test-docker
    tags:
      - '**'
  pull_request:
    branches:
      - master

permissions:
  contents: read
  packages: write
  # Ensure cosign can request for Github's OIDC JWT ID token
  # See: https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-cloud-providers#adding-permissions-settings
  id-token: write

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # This step generates the docker tags
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        env:
          # This env var ensures {{sha}} is a real commit SHA for type=ref,event=pr
          DOCKER_METADATA_PR_HEAD_SHA: 'true'
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          # type=ref,event=pr generates tag(s) on PRs only. E.g. 'pr-123', 'pr-123-abc0123'
          # type=ref,event=branch generates tag(s) on branch only. E.g. 'master', 'master-abc0123'
          # type=ref,event=tag generates tag(s) on tags only. E.g. 'v0.0.0', 'v0.0.0-abc0123', and 'latest'
          tags: |
            type=ref,event=pr
            type=ref,suffix=-{{sha}},event=pr
            type=ref,event=branch
            type=ref,suffix=-{{sha}},event=branch
            type=ref,event=tag
            type=ref,suffix=-{{sha}},event=tag
          labels: |
            org.opencontainers.image.description=Test Github CI
            org.opencontainers.image.licenses=Foo bar

      # This step generates the docker tags
      - name: Docker meta (advanced)
        id: meta-advanced
        uses: docker/metadata-action@v4
        env:
          # This env var ensures {{sha}} is a real commit SHA for type=ref,event=pr
          DOCKER_METADATA_PR_HEAD_SHA: 'true'
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          # type=ref,event=pr generates tag(s) on PRs only. E.g. 'pr-123', 'pr-123-abc0123'
          # type=ref,event=branch generates tag(s) on branch only. E.g. 'master', 'master-abc0123'
          # type=semver generates tag(s) on tags only. E.g. 'v0', 'v0.0', 'v0.0.0', 'v0.0.0-abc0123', and 'latest'
          tags: |
            type=ref,event=pr
            type=ref,suffix=-{{sha}},event=pr
            type=ref,event=branch
            type=ref,suffix=-{{sha}},event=branch
            type=semver,pattern=v{{major}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}.{{minor}}.{{patch}}
            type=semver,pattern=v{{major}}.{{minor}}.{{patch}},suffix=-{{sha}}

      - name: Get first tag
        run:
          set -eux
          echo "${{ steps.meta.outputs.tags }}"
          echo "${{ steps.meta.outputs.tags }}" | head -n1

      # See: https://github.com/docker/build-push-action/blob/v2.6.1/docs/advanced/cache.md#github-cache
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub registry
        # if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: '.'
          file: Dockerfile
          platforms: linux/amd64,linux/arm,linux/arm64,linux/mips64le,linux/ppc64le,linux/riscv64,linux/s390x
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Install cosign
        uses: sigstore/cosign-installer@c3667d99424e7e6047999fb6246c0da843953c65 # v3.0.1

      - name: Sign the published Docker image
        if: ${{ github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/') }}
        run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign --yes {}@${{ steps.build-and-push.outputs.digest }}

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  docker-matrix:
    strategy:
      matrix:
        variant:
          - hello-world
          - foo-bar
    runs-on: ubuntu-latest
    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        env:
          # This env var ensures {{sha}} is a real commit SHA for type=ref,event=pr
          DOCKER_METADATA_PR_HEAD_SHA: 'true'
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          # type=ref,event=pr generates tag(s) on PRs only. E.g. 'pr-123-<variant>', 'pr-123-abc0123-<variant>'
          # type=ref,event=branch generates tag(s) on branch only. E.g. 'master-<variant>', 'master-abc0123-<variant>'
          # type=ref,event=tag generates tag(s) on tags only. E.g.'v0.0.0-<variant>', 'v0.0.0-abc0123-<variant>'
          tags: |
            type=ref,suffix=-${{ matrix.variant }},event=pr
            type=ref,suffix=-{{sha}}-${{ matrix.variant }},event=pr
            type=ref,suffix=-${{ matrix.variant }},event=branch
            type=ref,suffix=-{{sha}}-${{ matrix.variant }},event=branch
            type=ref,suffix=-${{ matrix.variant }},event=tag
            type=ref,suffix=-{{sha}}-${{ matrix.variant }},event=tag
          # Disable 'latest' tag
          flavor: |
            latest=false
